<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>深入Vue3系列 Blog</title>
        <link>https://buzhifanji.github.io/vue</link>
        <description>深入Vue3系列 Blog</description>
        <lastBuildDate>Wed, 02 Nov 2022 12:39:11 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh</language>
        <item>
            <title><![CDATA[响应式系统之reactive]]></title>
            <link>https://buzhifanji.github.io/vue/reactive</link>
            <guid>/reactive</guid>
            <pubDate>Wed, 02 Nov 2022 12:39:11 GMT</pubDate>
            <category>vue3</category>
            <category>响应式</category>
        </item>
        <item>
            <title><![CDATA[响应式系统的工作原理]]></title>
            <link>https://buzhifanji.github.io/vue/responsvie</link>
            <guid>responsvie</guid>
            <pubDate>Wed, 02 Nov 2022 12:10:02 GMT</pubDate>
            <description><![CDATA[前言]]></description>
            <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>目前主流前端框架都有一个共同特点：<strong>数据驱动视图</strong>。我们先理解来数据驱动视图是什么意思？</p>
<p>我们所看到界面是会变化的，也就是说页面是动态的。页面变化前后是两种不同的状态，一种状态对应着一种视图。
我们可以用数据记录视图的状态。如此，当数据发生了变化，视图就应该更新。当输入的数据变化了，就更新视图，这个就数据驱动视图</p>
<h2 id="侦测数据变化">侦测数据变化</h2>
<p>如果数据的每次读写操作都看见了，那么我们就能够知道数据何时读取，何时修改。</p>
<p>要实现这样的侦测数据变化功能，我们需要 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy">Proxy</a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect">Reflect</a> 这两个<code>API</code> 。</p>
<section class="ch-spotlight"><div class="ch-spotlight-tabs"><div></div><div class="ch-spotlight-tab"><p>首先，我们定义一个数据对象 person：</p></div><div class="ch-spotlight-tab"><p>接下来，我们定义 person 读取拦截的操作，也就是定义 getter</p></div><div class="ch-spotlight-tab"><p>接着，定义 person 修改拦截的操作，也就是定义 setter</p></div><div class="ch-spotlight-tab"><p>测试侦听读取数据</p></div><div class="ch-spotlight-tab"><p>测试侦听修改数据</p></div></div><div class="ch-spotlight-sticker"><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="index.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>index.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const person = {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  name: "li",</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  age: 18,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>};</span></div></div><div><div style="display:inline-block;margin-left:16px"><span></span></div></div><div><div style="display:inline-block;margin-left:16px"><span>const newPerson = new Proxy(person, {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  get(target, key, receiver) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    console.log(`读取了属性：${key}`);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    return Reflect.get(target, key, receiver);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  set(target, key, value, receiver) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    console.log(`属性${key}更改为${value}`);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    return Reflect.set(target, key, value, receiver);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><div><div style="display:inline-block;margin-left:16px"><span></span></div></div><div><div style="display:inline-block;margin-left:16px"><span>newPerson.name; // 读取了属性：name</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>newPerson.age = 19; // 属性age更改为19</span></div></div><br></code></div></div></div></div></div></section>
<blockquote>
<p>如果你想深入了解为什么 Proxy 一定要配合 Reflect 使用，可以参考
<a href="https://www.zhangxinxu.com/wordpress/2021/07/js-proxy-reflect/">js-proxy-reflect</a>和
<a href="https://juejin.cn/post/7080916820353351688">为什么 Proxy 一定要配合 Reflect 使用？</a>这两篇文章</p>
</blockquote>
<p>通过上面的示例，我们简单实现了监听对象的读取操作。接下来我们来理解副作用函数这个概念。</p>
<h2 id="副作用函数">副作用函数</h2>
<p>副作用函数是 <code>vue3</code> 中底层的概念，这个是响应式系统核心的一部分。<strong>副作用函数指的是会产生副作用的函数</strong>，看起来有点绕口，下面以例子来理解副作用函数。</p>
<section class="ch-spotlight"><div class="ch-spotlight-tabs"><div><p>我们定义了 <code>effect</code> 函数，这个函数执行的时候，它会设置 <code>body</code> 的文本内容，但除了 <code>effect</code> 函数之外，
其它的任何函数都可以读取或者设置 <code>body</code> 的文本内容。也就是 <code>effect</code> 函数的执行会直接或间接的影响其它函数的执行，此时我们说 <code>effect</code> 函数产生了副作用。</p></div></div><div class="ch-spotlight-sticker"><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="effect.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>effect.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>function effect() {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  document.body.innerText = "hello effect";</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>}</span></div></div><br></code></div></div></div></div></div></section>
<h2 id="响应式数据">响应式数据</h2>
<p>前面我实现了拦截数据的读取操作，接下来我们把拦截操作和<code>effect</code> 副作用函数结合起来，实现一个简单响应式数据。</p>
<section class="ch-spotlight"><div class="ch-spotlight-tabs"><div></div><div class="ch-spotlight-tab"><p><strong>第一步</strong>，我们定义两个全局变量 <code>activeEffect</code> 和 <code>dep</code>。<code>activeEffect</code> 缓存被注册的副作用函数，而<code>dep</code>用于存储副作用函数。</p><blockquote>
<p>选择 <code>Set</code> 而不是数组数据结构，是因为<code>Set</code>可以帮我们处理数据重复问题。</p>
</blockquote></div><div class="ch-spotlight-tab"><p><strong>第二步</strong>，定义 <code>effect</code> 函数，此时函数执行的时候，会参数 <code>fn</code> 赋值给 <code>activeEffect</code>，这样就缓存了 <code>effect</code>注册的副作用函数</p></div><div class="ch-spotlight-tab"><p><strong>第三步</strong>，定义 <code>reactive</code> 函数，拦截数据的读写操作。数据读取的时候，会把被注册的副作用函<code>activeEffect</code> 存入到<code>dep</code>中，
数据更改的时候，会把<code>dep</code>中存储的副作用函数取出来，并执行。</p></div><div class="ch-spotlight-tab"><p>上面，我们就实现了响应式数据。接下来就是测试一下。首先调用<code>reactive</code>声明一个响应式对象，然后调用<code>effect</code>注册副作用函数，这个副作用函数执行的时候会读取响应式对象属性。
当响应式对象的属性值被修改时，副作用函数会触发执行。</p></div></div><div class="ch-spotlight-sticker"><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="index.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>index.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>let activeEffect;</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>let dep = new Set();</span></div></div><div><div style="display:inline-block;margin-left:16px"><span></span></div></div><div><div style="display:inline-block;margin-left:16px"><span>function effect(fn) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  activeEffect = fn;</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  fn();</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>}</span></div></div><div><div style="display:inline-block;margin-left:16px"><span></span></div></div><div><div style="display:inline-block;margin-left:16px"><span>function reactive(target) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  return new Proxy(target, {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    get(target, key, receiver) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      const res = Reflect.get(target, key, receiver);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      if (activeEffect) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>        dep.add(activeEffect);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      }</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      return res;</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    set(target, key, value, receiver) {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      const res = Reflect.set(target, key, value, receiver);</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dep.forEach((fn) =&gt; fn());</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      return res;</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  });</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>}</span></div></div><div><div style="display:inline-block;margin-left:16px"><span></span></div></div><div><div style="display:inline-block;margin-left:16px"><span>const obj = reactive({ name: "a" });</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>effect(() =&gt; console.log("effect: " + obj.name));</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>setTimeout(() =&gt; {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  obj.name = "hello";</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>}, 1000);</span></div></div><br></code></div></div></div></div></div></section>
<p>从上面的内容案例可以看出，一个响应式系统的工作流程如下：</p>
<ul>
<li>当<strong>读取</strong>操作发生时，将副作用函数收集起来。</li>
<li>当<strong>设置</strong>操作发生时，将收集起来的副作用函数取出并执行。</li>
</ul>
<p>以上就是<code>vue3</code>响应式数据的基本实现和工作原理</p>]]></content:encoded>
            <category>vue3</category>
            <category>响应式</category>
        </item>
        <item>
            <title><![CDATA[Scrollycoding]]></title>
            <link>https://buzhifanji.github.io/vue/ddt</link>
            <guid>/ddt</guid>
            <pubDate>Tue, 01 Nov 2022 06:47:31 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus. Praesent elementum facilisis leo vel fringilla. Congue mauris rhoncus aenean vel. Egestas sed tempus urna et pharetra pharetra massa massa ultricies.]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus. Praesent elementum facilisis leo vel fringilla. Congue mauris rhoncus aenean vel. Egestas sed tempus urna et pharetra pharetra massa massa ultricies.</p>
<p>Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus. Praesent elementum facilisis leo vel fringilla. Congue mauris rhoncus aenean vel. Egestas sed tempus urna et pharetra pharetra massa massa ultricies.</p>
<style class="ssmq-1">.ssmq-1.ssmq-default{display:block}.ssmq-1:not(.ssmq-default){display: none;}
@media not screen, (max-width: 768px){.ssmq-1.ssmq-notscreenmax-width768px{display:block}.ssmq-1:not(.ssmq-notscreenmax-width768px){display: none;}}</style><div class="ssmq-1 ssmq-notscreenmax-width768px"><section class="ch-scrollycoding-static"><h2 id="step-1">Step 1</h2><p>Lorem ipsum dolor sit amet, consectetur adipiscing something about points, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p><blockquote>
<p>Nova in illis at dabat legi harundine non, ova miratur? <em>Quid in</em> sole aer
ad diffusa illis voluisti fidensque coniugiale laniata curam. Aras rivus
eripuit, qua fistula haec partus; serpens, negat.</p>
</blockquote><p>Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus.</p><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="app.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>app.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const { lorem, ipsum } = dolor({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  sit: {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    amet: 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    consectetur: 2,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    adipiscing: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      sed: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    eiusmod: (tempor) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      incididunt: tempor,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    ut: (labore) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      et: labore,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dolore: labore + 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    magna: (aliqua) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ut: aliqua,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    nostrud: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      exercitation: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ullamco: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    laboris: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      nisi: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><br></code></div></div></div></div><h2 id="step-2">Step 2</h2><p>Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in.</p><p>Praesent elementum facilisis leo vel fringilla est ullamcorper eget.</p><p>Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Nibh cras pulvinar mattis nunc sed. Luctus accumsan tortor posuere ac ut consequat semper viverra. Fringilla ut morbi tincidunt augue interdum velit euismod.</p><p>Morbi quis commodo.</p><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="app.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>app.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const { lorem, ipsum } = dolor({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  sit: {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    amet: 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    consectetur: 2,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    adipiscing: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      sed: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    eiusmod: (tempor) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      incididunt: tempor,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    ut: (labore) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      et: labore,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dolore: labore + 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    magna: (aliqua) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ut: aliqua,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    nostrud: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      exercitation: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ullamco: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    laboris: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      nisi: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><br></code></div></div></div></div><h2 id="step-3">Step 3</h2><p>Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu.</p><ul>
<li>Nisi lacus sed viverra tellus in</li>
<li>Nibh cras pulvinar mattis nunc sed</li>
<li>Luctus accumsan tortor posuere ac</li>
</ul><p>Ut consequat semper viverra. Fringilla ut morbi tincidunt augue interdum velit euismod.</p><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="app.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>app.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const { lorem, ipsum } = dolor({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  sit: {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    amet: 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    consectetur: 2,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    adipiscing: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      sed: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    eiusmod: (tempor) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      incididunt: tempor,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    ut: (labore) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      et: lorem(labore * ipsum),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dolore: lorem(labore + 1),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    nostrud: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      exercitation: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ullamco: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    laboris: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      nisi: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><br></code></div></div></div></div><h2 id="step-4">Step 4</h2><p>Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Venenatis cras sed felis eget velit. Consectetur libero id faucibus nisl tincidunt.</p><p>Sed blandit libero volutpat sed cras.</p><ul>
<li>Nisi lacus sed viverra tellus in</li>
<li>Nibh cras pulvinar mattis nunc sed</li>
</ul><p>Gravida in fermentum et sollicitudin ac orci phasellus egestas tellus. Volutpat consequat mauris nunc congue nisi vitae.</p><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="app.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>app.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const { lorem, ipsum } = dolor({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  sit: {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    amet: 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    consectetur: 2,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    adipiscing: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      sed: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    eiusmod: (tempor) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      incididunt: tempor,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    ut: (labore) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      et: lorem(labore * ipsum),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dolore: lorem(labore + 1),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    nostrud: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      exercitation: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ullamco: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    laboris: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      nisi: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><br></code></div></div></div></div><h2 id="step-5">Step 5</h2><p>Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in.</p><p>Praesent elementum facilisis leo vel fringilla est ullamcorper eget.</p><p>Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat.</p><p>Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Nibh cras pulvinar mattis nunc sed. Luctus accumsan tortor posuere ac ut consequat semper viverra.</p><ul>
<li>Fringilla ut morbi tincidunt augue interdum velit euismod.</li>
<li>Luctus accumsan tortor posuere ac ut consequat semper viverra.</li>
</ul><p>Morbi quis commodo.</p><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="app.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>app.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const { lorem, ipsum } = dolor({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  sit: {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    amet: 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    consectetur: 2,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    adipiscing: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      sed: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    eiusmod: (tempor) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      incididunt: tempor,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    ut: (labore) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      et: lorem(labore * ipsum),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dolore: lorem(labore + 1),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    nostrud: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      exercitation: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ullamco: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    laboris: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      nisi: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><br></code></div></div></div></div></section></div><div class="ssmq-1 ssmq-default"><section class="ch-scrollycoding"><div class="ch-scrollycoding-content"><div class="ch-scrollycoding-step-content" data-selected="true"><h2 id="step-1">Step 1</h2><p>Lorem ipsum dolor sit amet, consectetur adipiscing something about points, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p><blockquote>
<p>Nova in illis at dabat legi harundine non, ova miratur? <em>Quid in</em> sole aer
ad diffusa illis voluisti fidensque coniugiale laniata curam. Aras rivus
eripuit, qua fistula haec partus; serpens, negat.</p>
</blockquote><p>Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus.</p></div><div class="ch-scrollycoding-step-content"><h2 id="step-2">Step 2</h2><p>Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in.</p><p>Praesent elementum facilisis leo vel fringilla est ullamcorper eget.</p><p>Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Nibh cras pulvinar mattis nunc sed. Luctus accumsan tortor posuere ac ut consequat semper viverra. Fringilla ut morbi tincidunt augue interdum velit euismod.</p><p>Morbi quis commodo.</p></div><div class="ch-scrollycoding-step-content"><h2 id="step-3">Step 3</h2><p>Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu.</p><ul>
<li>Nisi lacus sed viverra tellus in</li>
<li>Nibh cras pulvinar mattis nunc sed</li>
<li>Luctus accumsan tortor posuere ac</li>
</ul><p>Ut consequat semper viverra. Fringilla ut morbi tincidunt augue interdum velit euismod.</p></div><div class="ch-scrollycoding-step-content"><h2 id="step-4">Step 4</h2><p>Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Venenatis cras sed felis eget velit. Consectetur libero id faucibus nisl tincidunt.</p><p>Sed blandit libero volutpat sed cras.</p><ul>
<li>Nisi lacus sed viverra tellus in</li>
<li>Nibh cras pulvinar mattis nunc sed</li>
</ul><p>Gravida in fermentum et sollicitudin ac orci phasellus egestas tellus. Volutpat consequat mauris nunc congue nisi vitae.</p></div><div class="ch-scrollycoding-step-content"><h2 id="step-5">Step 5</h2><p>Velit euismod in pellentesque massa placerat. Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in.</p><p>Praesent elementum facilisis leo vel fringilla est ullamcorper eget.</p><p>Id aliquet risus feugiat in ante metus dictum at tempor. Sed blandit libero volutpat sed cras. Sed odio morbi quis commodo odio aenean sed adipiscing. Velit euismod in pellentesque massa placerat.</p><p>Mi bibendum neque egestas congue quisque egestas diam in arcu. Nisi lacus sed viverra tellus in. Nibh cras pulvinar mattis nunc sed. Luctus accumsan tortor posuere ac ut consequat semper viverra.</p><ul>
<li>Fringilla ut morbi tincidunt augue interdum velit euismod.</li>
<li>Luctus accumsan tortor posuere ac ut consequat semper viverra.</li>
</ul><p>Morbi quis commodo.</p></div></div><div class="ch-scrollycoding-sticker"><div class="ch-codegroup not-prose"><div class="ch-editor-frame" style="background:#2e3440"><div class="ch-frame-title-bar" style="color:#C5C5C5;background:#2e3440"><div class="ch-frame-buttons"><div class="ch-frame-button ch-frame-button-left"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-middle"></div><div class="ch-frame-button-space"></div><div class="ch-frame-button ch-frame-button-right"></div></div><div title="app.js" data-ch-tab="north" class="ch-editor-tab ch-editor-tab-active" style="background:#3b4252;color:#d8dee9;border-right-color:#3b425200;border-bottom-color:#88c0d000"><div><span style="opacity:0.5"></span>app.js</div></div><div style="flex:1;min-width:0.8em"></div><svg fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" class="ch-editor-button"><title>Copy</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.6px" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg><svg class="ch-editor-button" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="button"><title>Expand</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"></path></svg><dialog class="ch-expand-dialog"><svg class="ch-expand-close" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="button"><title>Close</title><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg></dialog></div><div data-ch-panel="north" style="flex-grow:1;overflow:hidden"><div class="ch-code-wrapper" style="margin:0;padding:0;position:relative;white-space:pre;box-sizing:content-box;opacity:0;overflow:auto;height:100%"><code class="ch-code-scroll-parent"><br><div><div style="display:inline-block;margin-left:16px"><span>const { lorem, ipsum } = dolor({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  sit: {</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    amet: 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    consectetur: 2,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    adipiscing: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      sed: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    eiusmod: (tempor) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      incididunt: tempor,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    ut: (labore) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      et: labore,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      dolore: labore + 1,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    magna: (aliqua) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ut: aliqua,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    nostrud: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      exercitation: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      ullamco: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    laboris: (elit) =&gt; ({</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>      nisi: elit,</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>    }),</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>  },</span></div></div><div><div style="display:inline-block;margin-left:16px"><span>});</span></div></div><br></code></div></div></div></div></div></section></div><script class="ssmq-1">!function(){for(var e=["not screen, (max-width: 768px)","default"],t=["ssmq-notscreenmax-width768px","ssmq-default"],s=document.getElementsByTagName("script"),o=s[s.length-1].parentNode,r=null,c=0;c<e.length-1;c++)if(window.matchMedia(e[c]).matches){r=o.querySelector(":scope > .ssmq-1."+t[c]);break}if(!r){var a=t.pop();r=o.querySelector(":scope > .ssmq-1."+a)}r.removeAttribute("class"),o.querySelectorAll(":scope > .ssmq-1").forEach((function(e){o.removeChild(e)}))}()</script>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus. Praesent elementum facilisis leo vel fringilla. Congue mauris rhoncus aenean vel. Egestas sed tempus urna et pharetra pharetra massa massa ultricies.</p>
<p>Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. At imperdiet dui accumsan sit amet nulla facilities morbi tempus. Praesent elementum facilisis leo vel fringilla. Congue mauris rhoncus aenean vel. Egestas sed tempus urna et pharetra pharetra massa massa ultricies.</p>]]></content:encoded>
        </item>
    </channel>
</rss>